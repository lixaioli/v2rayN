name: release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest 

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build
      run: cd v2rayN && ./build.ps1

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: v2rayN
        path: |
          ./v2rayN/v2rayN.zip

    - name: Get latest tag
      id: get_latest_tag
      run: |
        git fetch --tags  # 获取远程标签
        latest_tag=$(git describe --tags --abbrev=0 || echo "0.0.0")  # 获取最新标签，如果没有标签则默认为 "0.0.0"
        echo "Latest tag is $latest_tag"
        echo "latest_tag=$latest_tag" >> $GITHUB_ENV  # 设置环境变量，后续步骤可以使用

    - name: Increment version
      id: increment_version
      run: |
        current_version="${{ env.latest_tag }}"  # 使用环境变量中的标签
        IFS='.' read -r major minor patch <<< "$current_version"  # 按照 "." 分割标签
        patch=$((patch + 1))  # 递增 patch 版本
        new_version="$major.$minor.$patch"  # 构造新的标签
        echo "New version will be $new_version"
        echo "new_version=$new_version" >> $GITHUB_ENV  # 设置新的版本号环境变量

    - name: Create and push new tag
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag ${{ env.new_version }}  # 创建新标签
        git push origin ${{ env.new_version }}  # 推送新标签到远程仓库
        git tag  # 列出所有标签，确认标签已经创建
      shell: pwsh

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./v2rayN/v2rayN.zip
        tag_name: ${{ env.new_version }}  # 使用新的标签
        token: ${{ secrets.GITHUB_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
